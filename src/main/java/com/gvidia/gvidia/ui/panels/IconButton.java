/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gvidia.gvidia.ui.panels;

import static com.gvidia.gvidia.business.utils.ImageUtil.BASE_ICON;
import java.awt.Color;
import java.awt.image.BufferedImage;
import java.awt.image.BufferedImageOp;
import java.awt.image.LookupOp;
import java.awt.image.LookupTable;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author Nisha
 */
public class IconButton extends javax.swing.JPanel {

    /**
     * Creates new form IconButton
     */
    
    public String mIconLocation;
    public String mTitle;
    boolean set = false;
    
    
    public IconButton() {
        mIconLocation = BASE_ICON + "analytics.png";
        mTitle = "Analytics";
        initComponents();   
    }
    
    public IconButton(String icon, String title) {
        mIconLocation = BASE_ICON + icon;
        mTitle = title;
        initComponents();   
    }
    
    public void setColors(Color back, Color front) {
        btn_1.setBackground(back);
        if(!set) ind_1.setBackground(back);
        btn_txt_1.setForeground(front);
        
        try {
            setIconImage(front);
        } catch (IOException ex) {
            Logger.getLogger(IconButton.class.getName()).log(Level.SEVERE, null, ex);
        }
        set = true;
    }
    
    public void setIconImage(Color to) throws MalformedURLException, IOException {
        
        BufferedImage image = ImageIO.read(new File(mIconLocation));
        BufferedImageOp lookup = new LookupOp(new ColorMapper(Color.WHITE, to), null);
        BufferedImage convertedImage = lookup.filter(image, null);
        btn_icon_1.setIcon(new ImageIcon(convertedImage));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_1 = new javax.swing.JPanel();
        ind_1 = new javax.swing.JPanel();
        btn_txt_1 = new javax.swing.JLabel();
        btn_icon_1 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(150, 50));
        setMinimumSize(new java.awt.Dimension(150, 50));
        setPreferredSize(new java.awt.Dimension(150, 50));

        btn_1.setBackground(new java.awt.Color(204, 204, 255));
        btn_1.setMaximumSize(new java.awt.Dimension(150, 50));
        btn_1.setMinimumSize(new java.awt.Dimension(150, 50));
        btn_1.setPreferredSize(new java.awt.Dimension(150, 50));
        btn_1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_1MousePressed(evt);
            }
        });

        ind_1.setMaximumSize(new java.awt.Dimension(5, 50));
        ind_1.setMinimumSize(new java.awt.Dimension(5, 50));
        ind_1.setPreferredSize(new java.awt.Dimension(5, 50));

        javax.swing.GroupLayout ind_1Layout = new javax.swing.GroupLayout(ind_1);
        ind_1.setLayout(ind_1Layout);
        ind_1Layout.setHorizontalGroup(
            ind_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );
        ind_1Layout.setVerticalGroup(
            ind_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        btn_txt_1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btn_txt_1.setForeground(new java.awt.Color(255, 255, 255));
        btn_txt_1.setText(mTitle);

        btn_icon_1.setIcon(new ImageIcon(mIconLocation));
        btn_icon_1.setText("jLabel1");

        javax.swing.GroupLayout btn_1Layout = new javax.swing.GroupLayout(btn_1);
        btn_1.setLayout(btn_1Layout);
        btn_1Layout.setHorizontalGroup(
            btn_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_1Layout.createSequentialGroup()
                .addComponent(ind_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(btn_icon_1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_txt_1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        btn_1Layout.setVerticalGroup(
            btn_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ind_1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(btn_1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btn_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_txt_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_icon_1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(btn_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btn_1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_1MousePressed
        // TODO add your handling code here:
        if(this.getMouseListeners().length > 0) {
            this.getMouseListeners()[0].mousePressed(evt);
        }
    }//GEN-LAST:event_btn_1MousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btn_1;
    private javax.swing.JLabel btn_icon_1;
    private javax.swing.JLabel btn_txt_1;
    private javax.swing.JPanel ind_1;
    // End of variables declaration//GEN-END:variables

class ColorMapper extends LookupTable {

    private final int[] from;
    private final int[] to;

    public ColorMapper(Color from,
                       Color to) {
        super(0, 4);

        this.from = new int[] {
            from.getRed(),
            from.getGreen(),
            from.getBlue(),
            from.getAlpha(),
        };
        this.to = new int[] {
            to.getRed(),
            to.getGreen(),
            to.getBlue(),
            to.getAlpha(),
        };
    }

    public int[] lookupPixel(int[] src,
                             int[] dest) {
        if (dest == null) {
            dest = new int[src.length];
        }

        int[] newColor = (Arrays.equals(src, from) ? to : src);
        System.arraycopy(newColor, 0, dest, 0, newColor.length);

        return dest;
    }
    }
}
